const fs = require('fs');
const path = require('path');
const peggy = require('peggy');

// Define paths
const grammarPath = path.join(__dirname, '../src/lib/bibtex.peggy');
const outputPath = path.join(__dirname, '../src/lib/generated-parser.ts');

// Read the grammar file
console.log(`Reading grammar from ${grammarPath}`);
const grammar = fs.readFileSync(grammarPath, 'utf8');

// Generate the parser
console.log('Generating parser code...');
const parserSource = peggy.generate(grammar, {
  output: 'source',
  format: 'es',
  allowedStartRules: ['BibFile']
});

// Replace the module export with a default export
const parserSourceFixed = parserSource.replace(
  /export \{\s*peg\$allowedStartRules as StartRules,\s*peg\$SyntaxError as SyntaxError,\s*peg\$parse as parse\s*\};/g, 
  `export {
  peg$allowedStartRules as StartRules,
  peg$SyntaxError as SyntaxError,
  peg$parse as parse
};

export default peg$parse;`
);

// Write the parser to a TypeScript file with TypeScript ignore directives
console.log(`Writing parser code to ${outputPath}`);
const tsSource = `// THIS FILE IS GENERATED - DO NOT EDIT
// Generated by build/generate-parser.js

// @ts-nocheck - This file is generated, so we disable type checking
/* eslint-disable */

import { BtMetatype } from './types';

${parserSourceFixed}
`;

fs.writeFileSync(outputPath, tsSource);
console.log('Parser generation completed successfully!'); 